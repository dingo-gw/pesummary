=============
Code overview
=============

Python Modules
--------------

Below is a flowchart showing the dependency of different packages and modules within :code:`PESummary`.
                                                                                
.. image:: images/pesummary_layout.png

each module (e.g., :code:`pesummary.core.webpage.webpage`) serves a different purpose. On this page, we will give a short description of each module.

pesummary.utils
---------------

The :code:`pesummary.utils` module offers the submodule :code:`pesummary.utils.utils`. This submodule contains helpful functions for making directories and determining the url based on the web directory.

pesummary.core.inputs
---------------------

The :code:`pesummary.core.inputs` submodule controls the command line arguments. The `pesummary.core.inputs.Input` class first of all checks all of the inputs and makes sure that they are compatible with :code:`PESummary`. The `pesummary.core.inputs.PostProcessing` class is the base class for all of :code:`PESummary` storing key attributes.

pesummary.core.plot
-------------------

The :code:`pesummary.core.plot` module offers the submodule :code:`pesummary.core.plot.plot`. This submodule contains functions for generating all core plots that will be inserted into the webpages.

pesummary.core.webpage
----------------------

The :code:`pesummary.core.webpage` module offers the submodule :code:`pesummary.core.webpage.webpage`. This contains functions and classes to generate an manipulate html webpages. The functions within the :code:`pesummary.core.webpage.webpage.page` class allow the user to fully customise their webpage to their exact specifications.

pesummary.core.file
-------------------

The :code:`pesummary.core.file` module offers the submodules `pesumary.core.file.one_format`, `pesummary.core.file.existing`, `pesummary.core.file.meta_file` all inhertied from `pesummary.core.inputs.PostProcessing`. The `pesummary.core.file.one_format` submodule controls the input files. It has functions to read in both `hdf5` and `json` files and convert them into a standard format. The `pesummary.core.file.existing` controls files generated by :code:`PESummary` and allows the user to extract information that is stored within them. The `pesummary.core.file.meta_file` controls the creation of the meta file generated by `PESummary`.

pesummary.gw.plot.plot
----------------------

The :code:`pesummary.gw.plot.plot`  submodule contains functions to generate all GW specific plots that are run when any of the `GW` command line arguments or thr `--gw` flag is passed.

pesummary.gw.file
-----------------

The :code:`pesummary.gw.file` module offers the submodules `pesummary.gw.file.existing`, `pesummary.gw.file.lalinference`, `pesummary.gw.file.meta_file`, `pesummary.gw.file.one_format` which are all inherited from the core equivalent. The `pesummary.gw.file.existing.GWExisting` class has extra functions to recover the psd, calibration envelopes and approximants stored in the :code:`PESummary` metafile. The `pesummary.gw.file.lalinference.LALInferenceResultsFile` class has functions to extract the information stored in the `LALInference` specific results file. The `pesummary.gw.file.meta_file.GWMetaFile` class has extra functions to saving the psd, calibration and approximant information. Finally the `pesummary.gw.file.one_format.GWOneFormat` holds extra functions for deriving all GW specific posteriors from the samples given.
