stages:
  - test
  - workflow
  - consequences
  - deploy

.pesummary_install: &pesummary_install |
  pip install -r requirements.txt
  pip install -r optional_requirements.txt
  pip install -r testing_requirements.txt
  pip install bilby
  python setup.py sdist
  pip install dist/*.tar.gz

basic:
  stage: test
  image: python:3.6
  script:
    - *pesummary_install
    - summarypages --help
    - summaryplots --help
    - summarymodify --help
    - summarypublication --help
    - summaryclassification --help
    - summaryclean --help
    - summaryrecreate --help
    - summaryreview --help
    - summarycombine --help
    - summarydetchar --help
    - summaryversion --help
    - summarypageslw --help
    - summarypipe --help
    - python -c "import pesummary"
    - python -c "import pesummary.core"
    - python -c "import pesummary.gw"
    - python -c "import pesummary.utils"
    - python -c "import pesummary.cli"

python-3.6:
  stage: test
  image: python:3.6
  script:
    - export USER=albert.einstein
    - *pesummary_install
    - coverage run -m pytest tests --ignore tests/workflow_test.py
    - coverage report
    - coverage html
    - coverage-badge -o coverage_badge.svg -f

  artifacts:
    paths:
      - htmlcov/
      - coverage_badge.svg

python-3.7:
  stage: test
  image: python:3.7
  script:
    - export USER=albert.einstein
    - *pesummary_install
    - pytest tests --ignore tests/workflow_test.py

style:
  stage: test
  image: python:3.6
  script:
    - pip install flake8
    - flake8 . 

documentation:
  stage: test
  image: python:3.6
  before_script:
    - 'git lfs version || ( apt-get update -y && curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && apt-get install git-lfs && git lfs install)'
  script:
    - *pesummary_install
    - cd docs
    - make clean
    - bash build_docs.sh
  artifacts:
    paths:
      - docs/_build/html/

python3.6-core:
  stage: workflow
  dependencies:
    - python-3.6
    - style
    - basic
  image: python:3.6
  script:
    - *pesummary_install
    - pytest -k "Core or core" tests/workflow_test.py

python3.7-core:
  stage: workflow
  dependencies:
    - python-3.7
    - style
    - basic
  image: python:3.7
  script:
    - *pesummary_install
    - pytest -k "Core or core" tests/workflow_test.py

python3.6-gw:
  stage: workflow
  dependencies:
    - python-3.6
    - style
    - basic
  image: python:3.6
  script:
    - *pesummary_install
    - pytest -k "GW or gw" tests/workflow_test.py

python3.7-gw:
  stage: workflow
  dependencies:
    - python-3.7
    - style
    - basic
  image: python:3.7
  script:
    - *pesummary_install
    - pytest -k "GW or gw" tests/workflow_test.py

lalinference:
  stage: consequences
  image: python:3.6
  before_script:
    - 'git lfs version || ( apt-get update -y && curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && apt-get install git-lfs && git lfs install)'
  script:
    - *pesummary_install
    - git lfs clone https://git.ligo.org/lscsoft/ROQ_data --include "**/params.dat,*/4s/**"
    - mkdir -p lalinference/test/
    - mkdir -p lalinference/lib
    - curl https://git.ligo.org/charlie.hoy/lalsuite/raw/master/lalinference/lib/lalinference_pipe_example.ini -o lalinference_pipe_example.ini
    - mv lalinference_pipe_example.ini lalinference/lib
    - curl https://git.ligo.org/charlie.hoy/lalsuite/raw/master/lalinference/test/lalinference_nestedSampling_integration_test.sh -o fast_tutorial.sh
    - mv fast_tutorial.sh lalinference/test
    - curl https://git.ligo.org/charlie.hoy/lalsuite/raw/master/lalinference/test/injection_standard.xml -o injection_standard.xml
    - mv injection_standard.xml lalinference/test
    - path=`which lalinference_pipe`
    - base=`python -c "print('/'.join('${path}'.split('/')[:-2]))"`
    - sed -i "s;s|/home/albert.einstein/opt/lalsuite/| |;s|/home/albert.einstein/opt/lalsuite/|${base}|;" lalinference/test/fast_tutorial.sh
    - sed -i "s;tolerance=20;tolerance=500;" lalinference/test/fast_tutorial.sh
    - sed -i "s;cbcBayesPostProc;summarypages;" lalinference/lib/lalinference_pipe_example.ini
    - bash lalinference/test/fast_tutorial.sh
  only:
    - schedule
    - pushes

##bilby:
##  stage: consequences
##  image: python:3.6
##  script:
##    - *pesummary_install
##    - curl https://raw.githubusercontent.com/lscsoft/bilby/master/examples/gw_examples/injection_examples/fast_tutorial.py -o fast_tutorial.py
##    - sed -i '/result.plot_corner()/d' ./fast_tutorial.py
##    - sed -i 's/result = bilby.run_sampler(/result = bilby.run_sampler(dlogz=1000, /' ./fast_tutorial.py
##    - python fast_tutorial.py
##    - summarypages --webdir ./outdir/webpage --samples ./outdir/fast_tutorial_result.json --gw
##  only:
##    - schedule
##    - pushes

GW190412:
  stage: consequences
  image: python:3.6
  script:
    - *pesummary_install
    - curl https://dcc.ligo.org/public/0163/P190412/009/posterior_samples.h5 -o GW190412_posterior_samples.h5
    - python tests/existing_file.py -f GW190412_posterior_samples.h5
  only:
    - schedule
    - pushes

GW190425:
  stage: consequences
  image: python:3.6
  script:
    - *pesummary_install
    - curl https://dcc.ligo.org/public/0165/P2000026/001/GW190425_posterior_samples.h5 -o GW190425_posterior_samples.h5
    - python tests/existing_file.py -f GW190425_posterior_samples.h5
  only:
    - schedule
    - pushes

GWTC1:
  stage: consequences
  image: python:3.6
  script:
    - *pesummary_install
    - curl -O https://dcc.ligo.org/public/0157/P1800370/004/GWTC-1_sample_release.tar.gz
    - tar -xf GWTC-1_sample_release.tar.gz
    - python tests/existing_file.py -f GWTC-1_sample_release/GW150914_GWTC-1.hdf5 -t pesummary.gw.file.formats.GWTC1.GWTC1
    - summarypages --webdir ./GWTC1 --no_ligo_skymap --samples GWTC-1_sample_release/GW150914_GWTC-1.hdf5 GWTC-1_sample_release/GW170817_GWTC-1.hdf5 --path_to_samples None IMRPhenomPv2NRT_highSpin_posterior --labels GW150914 GW170817 --gw

build_examples:
  stage: deploy
  image: python:3.6
  script:
    - curl --request POST --form "token=$CI_EXAMPLES_TRIGGER_TOKEN" --form ref=master https://git.ligo.org/api/v4/projects/3386/trigger/pipeline
  only:
    - master@lscsoft/pesummary

release:
  stage: deploy
  image: python:3.6
  script:
    - curl --request POST --form "variables[REPO]=pesummary" --form ref=master --form "token=$CI_RELEASE_TRIGGER_TOKEN" https://git.ligo.org/api/v4/projects/4737/trigger/pipeline
  only:
    refs:
      - master@lscsoft/pesummary
    variables:
      - $CI_COMMIT_MESSAGE =~ /Releasing version/

pages:
  stage: deploy
  dependencies:
    - python-3.6
    - documentation
    - python3.6-core
    - python3.6-gw
    ##- bilby
    - lalinference
  script:
    - mkdir public/
    - mv htmlcov/ public/
    - mv /builds/lscsoft/pesummary/coverage_badge.svg public/
    - mv docs/_build/html/* public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master@lscsoft/pesummary
